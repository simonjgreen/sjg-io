---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const { 
  href, 
  variant = 'primary', 
  size = 'md', 
  class: className 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2';

const variantClasses = {
  primary: 'bg-neon-blue text-white hover:bg-neon-blue/80 focus:ring-neon-blue/50 transition-all duration-300 shadow-sm hover:shadow-md',
  secondary: 'bg-neon-magenta text-white hover:bg-neon-magenta/80 focus:ring-neon-magenta/50 transition-all duration-300 shadow-sm hover:shadow-md',
  outline: 'border-2 border-neon-blue text-neon-blue hover:bg-neon-blue/10 hover:text-neon-blue focus:ring-neon-blue/50 dark:border-neon-blue dark:text-neon-blue dark:hover:bg-neon-blue/10 dark:hover:text-neon-blue transition-all duration-300 shadow-sm hover:shadow-md'
};

const sizeClasses = {
  sm: 'px-3 py-2 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base'
};

const Component = href ? 'a' : 'button';
const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className || ''}`;
---

<Component href={href} class={classes}>
  <slot />
</Component>
