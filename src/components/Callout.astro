---
export interface Props {
  variant?: 'info' | 'warning' | 'success' | 'neutral';
  icon?: string;
}

const { variant = 'neutral', icon } = Astro.props;

const getVariantStyles = (variant: string) => {
  switch (variant) {
    case 'info':
      return 'bg-blue-50 border-blue-200 text-blue-700 dark:bg-blue-500/10 dark:border-blue-500/20 dark:text-blue-300';
    case 'warning':
      return 'bg-amber-50 border-amber-200 text-amber-700 dark:bg-yellow-500/10 dark:border-yellow-500/20 dark:text-yellow-300';
    case 'success':
      return 'bg-emerald-50 border-emerald-200 text-emerald-700 dark:bg-green-500/10 dark:border-green-500/20 dark:text-green-300';
    default:
      return 'bg-gray-100 border-gray-200 text-gray-900 dark:bg-white/5 dark:border-white/10 dark:text-white/80';
  }
};

const getIcon = (variant: string) => {
  switch (variant) {
    case 'info':
      return 'ℹ️';
    case 'warning':
      return '⚠️';
    case 'success':
      return '✅';
    default:
      return '💡';
  }
};
---

<div class={`rounded-lg border p-4 ${getVariantStyles(variant)}`}>
  <div class="flex items-center gap-3">
    <span class="text-lg flex-shrink-0">{icon || getIcon(variant)}</span>
    <div class="prose prose-sm max-w-none">
      <slot />
    </div>
  </div>
</div>
